[
   {
      "id":"rely.aws.v1.organizations_account-to-cloud_provider_account",
      "title":"AWS Organization Account to Cloud Provider Account",
      "description":"This automation creates a Cloud Provider Account from an AWS Organization Account",
      "icon":null,
      "isActive":true,
      "needsApproval":false,
      "order":0,
      "type":"automation",
      "arguments":{
         "sourceBlueprintId":"aws.v1.organizations_account",
         "targetBlueprintId":"cloud_provider_account"
      },
      "secrets":{

      },
      "triggers":[
         {
            "type":"onEvent",
            "conditions":[
               {
                  "field":"data.blueprintId",
                  "expression":false,
                  "operator":"eq",
                  "value":"{{ arguments.sourceBlueprintId }}"
               }
            ],
            "event":{
               "resource":"entity",
               "action":[
                  "create",
                  "update"
               ]
            }
         }
      ],
      "actions":[
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id | string }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "relations":{
                     "AWSAccount":{
                        "value":"{{ data.id | string }}"
                     }
                  },
                  "properties":{
                    "email":"{{ data.properties.email if data.properties.email else none }}",
                    "status":"{{ data.properties.status if data.properties.status else none }}"
                  },
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "description":"{{ data.description }}"
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "id":"upsert_resource"
         }
      ],
      "outputs":{

      },
      "tags":[
         {
            "key":"default",
            "value":"true"
         },
         {
            "key":"owner",
            "value":"rely"
         }
      ]
   },
   {
   "id":"rely.aws.v1.lambda-function-to-resource-link-to-environment",
   "title":"AWS Lambda Function to Resource (w/ link to an environment)",
   "description":"This automation creates a cloud resource from an AWS Lambda Function and links it to an environment based on tag matching",
   "isActive":true,
   "order":0,
   "type":"automation",
   "arguments":{
      "sourceBlueprintId":"aws.v1.lambda_function",
      "targetBlueprintId":"cloud_resource"
   },
   "secrets":{

   },
   "triggers":[
      {
         "type":"onEvent",
         "conditions":[
            {
               "field":"data.blueprintId",
               "operator":"eq",
               "value":"{{ arguments.sourceBlueprintId }}"
            }
         ],
         "event":{
            "resource":"entity",
            "action":[
               "create",
               "update"
            ]
         }
      }
   ],
   "actions":[
      {
         "type":"fetchResource",
         "args":{
            "conditions":[
               {
                  "field":"blueprintId",
                  "value":"cloud_provider_account",
                  "operator":"eq"
               },
               {
                  "field":"sources",
                  "value":"aws.v1.organizations_account.{{ data.relations.account.value }}",
                  "operator":"contains"
               }
            ],
            "resourceType":"entity",
            "stopFlowIfNotFound":true
         },
         "id":"fetch_cloud_provider_account"
      },
      {
         "type":"fetchResource",
         "args":{
            "conditions":[
               {
                  "field":"blueprintId",
                  "value":"environment",
                  "operator":"eq"
               },
               {
                  "field":"properties/labels",
                  "value":"{{ data.properties.tags['env'] }}",
                  "operator":"contains"
               }
            ],
            "resourceType":"entity",
            "stopFlowIfNotFound":false
         },
         "conditions":[
            {
               "field":"data.properties.tags",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"data.properties.tags['env']",
               "value":null,
               "operator":"neq"
            }
         ],
         "id":"fetch_environment_using_tag_env"
      },
      {
         "type":"upsertResource",
         "args":{
            "data":{
               "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
               "title":"{{ data.title }}",
               "description":"{{ data.description }}",
               "blueprintId":"{{ arguments.targetBlueprintId }}",
               "relations":{
                  "AWSLambdaFunction":{
                     "value":"{{ data.id }}"
                  },
                  "cloud_provider_account":{
                     "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                  },
                  "environment":{
                     "value":"{{ actions.fetch_environment_using_tag_env.output.id }}"
                  }
               },
               "properties":{
                  "cloud":"AWS",
                  "resourceType":"Lambda",
                  "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                  "region":"{{ data.relations.region.value if data.relations.region else none }}",
                  "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                  "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                  "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
               }
            },
            "resourceType":"entity",
            "createSuggestion":false
         },
         "conditions":[
            {
               "field":"data.properties.tags",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"data.properties.tags['env']",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"actions",
               "value":"fetch_environment_using_tag_env",
               "operator":"contains"
            }
         ],
         "id":"upsert_resource_using_tag_env"
      },
      {
         "type":"fetchResource",
         "args":{
            "conditions":[
               {
                  "field":"blueprintId",
                  "value":"environment",
                  "operator":"eq"
               },
               {
                  "field":"properties/labels",
                  "value":"{{ data.properties.tags['Env'] }}",
                  "operator":"contains"
               }
            ],
            "resourceType":"entity",
            "stopFlowIfNotFound":false
         },
         "conditions":[
            {
               "field":"data.properties.tags",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"data.properties.tags['Env']",
               "value":null,
               "operator":"neq"
            }
         ],
         "id":"fetch_environment_using_tag_env_capitalized"
      },
      {
         "type":"upsertResource",
         "args":{
            "data":{
               "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
               "title":"{{ data.title }}",
               "description":"{{ data.description }}",
               "blueprintId":"{{ arguments.targetBlueprintId }}",
               "relations":{
                  "AWSLambdaFunction":{
                     "value":"{{ data.id }}"
                  },
                  "cloud_provider_account":{
                     "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                  },
                  "environment":{
                     "value":"{{ actions.fetch_environment_using_tag_env_capitalized.output.id }}"
                  }
               },
               "properties":{
                  "cloud":"AWS",
                  "resourceType":"Lambda",
                  "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                  "region":"{{ data.relations.region.value if data.relations.region else none }}",
                  "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                  "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                  "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
               }
            },
            "resourceType":"entity",
            "createSuggestion":false
         },
         "conditions":[
            {
               "field":"data.properties.tags",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"data.properties.tags['Env']",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"actions",
               "value":"fetch_environment_using_tag_env_capitalized",
               "operator":"contains"
            }
         ],
         "id":"upsert_resource_using_tag_env_capitalized"
      },
      {
         "type":"fetchResource",
         "args":{
            "conditions":[
               {
                  "field":"blueprintId",
                  "value":"environment",
                  "operator":"eq"
               },
               {
                  "field":"properties/labels",
                  "value":"{{ data.properties.tags['ENV'] }}",
                  "operator":"contains"
               }
            ],
            "resourceType":"entity",
            "stopFlowIfNotFound":false
         },
         "conditions":[
            {
               "field":"data.properties.tags",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"data.properties.tags['ENV']",
               "value":null,
               "operator":"neq"
            }
         ],
         "id":"fetch_environment_using_tag_env_all_caps"
      },
      {
         "type":"upsertResource",
         "args":{
            "data":{
               "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
               "title":"{{ data.title }}",
               "description":"{{ data.description }}",
               "blueprintId":"{{ arguments.targetBlueprintId }}",
               "relations":{
                  "AWSLambdaFunction":{
                     "value":"{{ data.id }}"
                  },
                  "cloud_provider_account":{
                     "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                  },
                  "environment":{
                     "value":"{{ actions.fetch_environment_using_tag_env_all_caps.output.id }}"
                  }
               },
               "properties":{
                  "cloud":"AWS",
                  "resourceType":"Lambda",
                  "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                  "region":"{{ data.relations.region.value if data.relations.region else none }}",
                  "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                  "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                  "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
               }
            },
            "resourceType":"entity",
            "createSuggestion":false
         },
         "conditions":[
            {
               "field":"data.properties.tags",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"data.properties.tags['ENV']",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"actions",
               "value":"fetch_environment_using_tag_env_all_caps",
               "operator":"contains"
            }
         ],
         "id":"upsert_resource_using_tag_env_all_caps"
      },
      {
         "type":"fetchResource",
         "args":{
            "conditions":[
               {
                  "field":"blueprintId",
                  "value":"environment",
                  "operator":"eq"
               },
               {
                  "field":"properties/labels",
                  "value":"{{ data.properties.tags['environment'] }}",
                  "operator":"contains"
               }
            ],
            "resourceType":"entity",
            "stopFlowIfNotFound":false
         },
         "conditions":[
            {
               "field":"data.properties.tags",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"data.properties.tags['environment']",
               "value":null,
               "operator":"neq"
            }
         ],
         "id":"fetch_environment_using_tag_environment"
      },
      {
         "type":"upsertResource",
         "args":{
            "data":{
               "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
               "title":"{{ data.title }}",
               "description":"{{ data.description }}",
               "blueprintId":"{{ arguments.targetBlueprintId }}",
               "relations":{
                  "AWSLambdaFunction":{
                     "value":"{{ data.id }}"
                  },
                  "cloud_provider_account":{
                     "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                  },
                  "environment":{
                     "value":"{{ actions.fetch_environment_using_tag_environment.output.id }}"
                  }
               },
               "properties":{
                  "cloud":"AWS",
                  "resourceType":"Lambda",
                  "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                  "region":"{{ data.relations.region.value if data.relations.region else none }}",
                  "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                  "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                  "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
               }
            },
            "resourceType":"entity",
            "createSuggestion":false
         },
         "conditions":[
            {
               "field":"data.properties.tags",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"data.properties.tags['environment']",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"actions",
               "value":"fetch_environment_using_tag_environment",
               "operator":"contains"
            }
         ],
         "id":"upsert_resource_using_tag_environment"
      },
      {
         "type":"fetchResource",
         "args":{
            "conditions":[
               {
                  "field":"blueprintId",
                  "value":"environment",
                  "operator":"eq"
               },
               {
                  "field":"properties/labels",
                  "value":"{{ data.properties.tags['Environment'] }}",
                  "operator":"contains"
               }
            ],
            "resourceType":"entity",
            "stopFlowIfNotFound":false
         },
         "conditions":[
            {
               "field":"data.properties.tags",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"data.properties.tags['Environment']",
               "value":null,
               "operator":"neq"
            }
         ],
         "id":"fetch_environment_using_tag_environment_capitalized"
      },
      {
         "type":"upsertResource",
         "args":{
            "data":{
               "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
               "title":"{{ data.title }}",
               "description":"{{ data.description }}",
               "blueprintId":"{{ arguments.targetBlueprintId }}",
               "relations":{
                  "AWSLambdaFunction":{
                     "value":"{{ data.id }}"
                  },
                  "cloud_provider_account":{
                     "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                  },
                  "environment":{
                     "value":"{{ actions.fetch_environment_using_tag_environment_capitalized.output.id }}"
                  }
               },
               "properties":{
                  "cloud":"AWS",
                  "resourceType":"Lambda",
                  "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                  "region":"{{ data.relations.region.value if data.relations.region else none }}",
                  "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                  "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                  "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
               }
            },
            "resourceType":"entity",
            "createSuggestion":false
         },
         "conditions":[
            {
               "field":"data.properties.tags",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"data.properties.tags['Environment']",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"actions",
               "value":"fetch_environment_using_tag_environment_capitalized",
               "operator":"contains"
            }
         ],
         "id":"upsert_resource_using_tag_environment_capitalized"
      },
      {
         "type":"fetchResource",
         "args":{
            "conditions":[
               {
                  "field":"blueprintId",
                  "value":"environment",
                  "operator":"eq"
               },
               {
                  "field":"properties/labels",
                  "value":"{{ data.properties.tags['ENVIRONMENT'] }}",
                  "operator":"contains"
               }
            ],
            "resourceType":"entity",
            "stopFlowIfNotFound":false
         },
         "conditions":[
            {
               "field":"data.properties.tags",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"data.properties.tags['ENVIRONMENT']",
               "value":null,
               "operator":"neq"
            }
         ],
         "id":"fetch_environment_using_tag_environment_all_caps"
      },
      {
         "type":"upsertResource",
         "args":{
            "data":{
               "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
               "title":"{{ data.title }}",
               "description":"{{ data.description }}",
               "blueprintId":"{{ arguments.targetBlueprintId }}",
               "relations":{
                  "AWSLambdaFunction":{
                     "value":"{{ data.id }}"
                  },
                  "cloud_provider_account":{
                     "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                  },
                  "environment":{
                     "value":"{{ actions.fetch_environment_using_tag_environment_all_caps.output.id }}"
                  }
               },
               "properties":{
                  "cloud":"AWS",
                  "resourceType":"Lambda",
                  "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                  "region":"{{ data.relations.region.value if data.relations.region else none }}",
                  "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                  "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                  "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
               }
            },
            "resourceType":"entity",
            "createSuggestion":false
         },
         "conditions":[
            {
               "field":"data.properties.tags",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"data.properties.tags['ENVIRONMENT']",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"actions",
               "value":"fetch_environment_using_tag_environment_all_caps",
               "operator":"contains"
            }
         ],
         "id":"upsert_resource_using_tag_environment_full_caps"
      },
      {
         "type":"fetchResource",
         "args":{
            "conditions":[
               {
                  "field":"blueprintId",
                  "value":"environment",
                  "operator":"eq"
               },
               {
                  "field":"properties/labels",
                  "value":"{{ data.properties.tags['stage'] }}",
                  "operator":"contains"
               }
            ],
            "resourceType":"entity",
            "stopFlowIfNotFound":false
         },
         "conditions":[
            {
               "field":"data.properties.tags",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"data.properties.tags['stage']",
               "value":null,
               "operator":"neq"
            }
         ],
         "id":"fetch_environment_using_tag_stage"
      },
      {
         "type":"upsertResource",
         "args":{
            "data":{
               "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
               "title":"{{ data.title }}",
               "description":"{{ data.description }}",
               "blueprintId":"{{ arguments.targetBlueprintId }}",
               "relations":{
                  "AWSLambdaFunction":{
                     "value":"{{ data.id }}"
                  },
                  "cloud_provider_account":{
                     "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                  },
                  "environment":{
                     "value":"{{ actions.fetch_environment_using_tag_stage.output.id }}"
                  }
               },
               "properties":{
                  "cloud":"AWS",
                  "resourceType":"Lambda",
                  "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                  "region":"{{ data.relations.region.value if data.relations.region else none }}",
                  "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                  "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                  "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
               }
            },
            "resourceType":"entity",
            "createSuggestion":false
         },
         "conditions":[
            {
               "field":"data.properties.tags",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"data.properties.tags['stage']",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"actions",
               "value":"fetch_environment_using_tag_stage",
               "operator":"contains"
            }
         ],
         "id":"upsert_resource_using_tag_stage"
      },
      {
         "type":"fetchResource",
         "args":{
            "conditions":[
               {
                  "field":"blueprintId",
                  "value":"environment",
                  "operator":"eq"
               },
               {
                  "field":"properties/labels",
                  "value":"{{ data.properties.tags['Stage'] }}",
                  "operator":"contains"
               }
            ],
            "resourceType":"entity",
            "stopFlowIfNotFound":false
         },
         "conditions":[
            {
               "field":"data.properties.tags",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"data.properties.tags['Stage']",
               "value":null,
               "operator":"neq"
            }
         ],
         "id":"fetch_environment_using_tag_stage_capitalized"
      },
      {
         "type":"upsertResource",
         "args":{
            "data":{
               "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
               "title":"{{ data.title }}",
               "description":"{{ data.description }}",
               "blueprintId":"{{ arguments.targetBlueprintId }}",
               "relations":{
                  "AWSLambdaFunction":{
                     "value":"{{ data.id }}"
                  },
                  "cloud_provider_account":{
                     "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                  },
                  "environment":{
                     "value":"{{ actions.fetch_environment_using_tag_stage_capitalized.output.id }}"
                  }
               },
               "properties":{
                  "cloud":"AWS",
                  "resourceType":"Lambda",
                  "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                  "region":"{{ data.relations.region.value if data.relations.region else none }}",
                  "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                  "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                  "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
               }
            },
            "resourceType":"entity",
            "createSuggestion":false
         },
         "conditions":[
            {
               "field":"data.properties.tags",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"data.properties.tags['Stage']",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"actions",
               "value":"fetch_environment_using_tag_stage_capitalized",
               "operator":"contains"
            }
         ],
         "id":"upsert_resource_using_tag_stage_capitalized"
      },
      {
         "type":"fetchResource",
         "args":{
            "conditions":[
               {
                  "field":"blueprintId",
                  "value":"environment",
                  "operator":"eq"
               },
               {
                  "field":"properties/labels",
                  "value":"{{ data.properties.tags['STAGE'] }}",
                  "operator":"contains"
               }
            ],
            "resourceType":"entity",
            "stopFlowIfNotFound":false
         },
         "conditions":[
            {
               "field":"data.properties.tags",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"data.properties.tags['STAGE']",
               "value":null,
               "operator":"neq"
            }
         ],
         "id":"fetch_environment_using_tag_stage_all_caps"
      },
      {
         "type":"upsertResource",
         "args":{
            "data":{
               "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
               "title":"{{ data.title }}",
               "description":"{{ data.description }}",
               "blueprintId":"{{ arguments.targetBlueprintId }}",
               "relations":{
                  "AWSLambdaFunction":{
                     "value":"{{ data.id }}"
                  },
                  "cloud_provider_account":{
                     "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                  },
                  "environment":{
                     "value":"{{ actions.fetch_environment_using_tag_stage_all_caps.output.id }}"
                  }
               },
               "properties":{
                  "cloud":"AWS",
                  "resourceType":"Lambda",
                  "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                  "region":"{{ data.relations.region.value if data.relations.region else none }}",
                  "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                  "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                  "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
               }
            },
            "resourceType":"entity",
            "createSuggestion":false
         },
         "conditions":[
            {
               "field":"data.properties.tags",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"data.properties.tags['STAGE']",
               "value":null,
               "operator":"neq"
            },
            {
               "field":"actions",
               "value":"fetch_environment_using_tag_stage_all_caps",
               "operator":"contains"
            }
         ],
         "id":"upsert_resource_using_tag_stage_full_caps"
      }
   ],
   "tags":[
      {
         "key":"default",
         "value":"true"
      },
      {
         "key":"owner",
         "value":"rely"
      }
   ]
},
   {
      "id":"rely.aws.v1.lambda-function-to-cloud-resource-link-to-service",
      "title":"AWS Lambda Function to Cloud Resource (w/ link to a service)",
      "description":"This automation creates a Cloud Resource from an AWS Lambda Function and links it to a service based on tag matching",
      "icon":null,
      "isActive":true,
      "needsApproval":false,
      "order":0,
      "type":"automation",
      "arguments":{
         "sourceBlueprintId":"aws.v1.lambda_function",
         "targetBlueprintId":"cloud_resource"
      },
      "secrets":{

      },
      "triggers":[
         {
            "type":"onEvent",
            "conditions":[
               {
                  "field":"data.blueprintId",
                  "expression":false,
                  "operator":"eq",
                  "value":"{{ arguments.sourceBlueprintId }}"
               }
            ],
            "event":{
               "resource":"entity",
               "action":[
                  "create",
                  "update"
               ]
            }
         }
      ],
      "actions":[
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"cloud_provider_account",
                     "operator":"eq"
                  },
                  {
                     "field":"sources",
                     "value":"aws.v1.organizations_account.{{ data.relations.account.value }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":true
            },
            "id":"fetch_cloud_provider_account"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['service'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['service']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_service"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSLambdaFunction":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_service.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"Lambda",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['service']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_service",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_service"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['Service'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Service']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_service_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSLambdaFunction":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_service_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"Lambda",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Service']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_service_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_service_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['application'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['application']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_application"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSLambdaFunction":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_application.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"Lambda",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['application']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_application",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_application"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['Application'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Application']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_application_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSLambdaFunction":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_application_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"Lambda",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Application']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_application_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_application_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['app'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['app']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_app"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSLambdaFunction":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_app.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"Lambda",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['app']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_app",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_app"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['App'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['App']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_app_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSLambdaFunction":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_app_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"Lambda",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['App']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_app_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_app_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['component'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['component']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_component"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSLambdaFunction":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_component.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"Lambda",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['component']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_component",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_component"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['Component'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Component']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_component_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSLambdaFunction":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_component_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"Lambda",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Component']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_component_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_component_capitalized"
         }
      ],
      "outputs":{

      },
      "tags":[
         {
            "key":"default",
            "value":"true"
         },
         {
            "key":"owner",
            "value":"rely"
         }
      ]
   },
   {
      "id":"rely.aws.v1.ec2-instance-to-resource-link-to-environment",
      "title":"AWS EC2 Instance to Resource (w/ link to an environment)",
      "description":"This automation creates a cloud resource from an AWS EC2 instance and links it to an environment based on tag matching",
      "isActive":true,
      "order":0,
      "type":"automation",
      "arguments":{
         "sourceBlueprintId":"aws.v1.ec2_instance",
         "targetBlueprintId":"cloud_resource"
      },
      "secrets":{

      },
      "triggers":[
         {
            "type":"onEvent",
            "conditions":[
               {
                  "field":"data.blueprintId",
                  "operator":"eq",
                  "value":"{{ arguments.sourceBlueprintId }}"
               }
            ],
            "event":{
               "resource":"entity",
               "action":[
                  "create",
                  "update"
               ]
            }
         }
      ],
      "actions":[
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"cloud_provider_account",
                     "operator":"eq"
                  },
                  {
                     "field":"sources",
                     "value":"aws.v1.organizations_account.{{ data.relations.account.value }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":true
            },
            "id":"fetch_cloud_provider_account"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['env'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['env']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_env"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEC2Instance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_env.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"EC2",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.instanceId if data.properties.instanceId else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['env']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_env",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_env"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['Env'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Env']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_env_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEC2Instance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_env_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"EC2",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.instanceId if data.properties.instanceId else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Env']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_env_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_env_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['ENV'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['ENV']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_env_all_caps"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEC2Instance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_env_all_caps.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"EC2",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.instanceId if data.properties.instanceId else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['ENV']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_env_all_caps",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_env_all_caps"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['environment'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['environment']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_environment"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEC2Instance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_environment.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"EC2",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.instanceId if data.properties.instanceId else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['environment']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_environment",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_environment"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['Environment'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Environment']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_environment_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEC2Instance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_environment_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"EC2",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.instanceId if data.properties.instanceId else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Environment']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_environment_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_environment_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['ENVIRONMENT'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['ENVIRONMENT']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_environment_all_caps"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEC2Instance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_environment_all_caps.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"EC2",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.instanceId if data.properties.instanceId else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['ENVIRONMENT']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_environment_all_caps",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_environment_full_caps"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['stage'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['stage']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_stage"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEC2Instance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_stage.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"EC2",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.instanceId if data.properties.instanceId else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['stage']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_stage",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_stage"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['Stage'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Stage']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_stage_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEC2Instance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_stage_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"EC2",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.instanceId if data.properties.instanceId else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Stage']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_stage_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_stage_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['STAGE'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['STAGE']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_stage_all_caps"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEC2Instance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_stage_all_caps.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"EC2",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.instanceId if data.properties.instanceId else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['STAGE']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_stage_all_caps",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_stage_full_caps"
         }
      ],
      "tags":[
         {
            "key":"default",
            "value":"true"
         },
         {
            "key":"owner",
            "value":"rely"
         }
      ]
   },
   {
      "id":"rely.aws.v1.ec2-instance-to-cloud-resource-link-to-service",
      "title":"AWS EC2 Instance to Cloud Resource (w/ link to a service)",
      "description":"This automation creates a Cloud Resource from an AWS EC2 instance and links it to a service based on tag matching",
      "icon":null,
      "isActive":true,
      "needsApproval":false,
      "order":0,
      "type":"automation",
      "arguments":{
         "sourceBlueprintId":"aws.v1.ec2_instance",
         "targetBlueprintId":"cloud_resource"
      },
      "secrets":{

      },
      "triggers":[
         {
            "type":"onEvent",
            "conditions":[
               {
                  "field":"data.blueprintId",
                  "expression":false,
                  "operator":"eq",
                  "value":"{{ arguments.sourceBlueprintId }}"
               }
            ],
            "event":{
               "resource":"entity",
               "action":[
                  "create",
                  "update"
               ]
            }
         }
      ],
      "actions":[
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"cloud_provider_account",
                     "operator":"eq"
                  },
                  {
                     "field":"sources",
                     "value":"aws.v1.organizations_account.{{ data.relations.account.value }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":true
            },
            "id":"fetch_cloud_provider_account"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['service'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['service']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_service"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEC2Instance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_service.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"EC2",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.instanceId if data.properties.instanceId else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['service']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_service",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_service"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['Service'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Service']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_service_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEC2Instance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_service_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"EC2",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.instanceId if data.properties.instanceId else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Service']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_service_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_service_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['application'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['application']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_application"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEC2Instance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_application.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"EC2",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.instanceId if data.properties.instanceId else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['application']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_application",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_application"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['Application'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Application']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_application_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEC2Instance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_application_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"EC2",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.instanceId if data.properties.instanceId else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Application']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_application_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_application_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['app'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['app']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_app"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEC2Instance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_app.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"EC2",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.instanceId if data.properties.instanceId else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['app']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_app",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_app"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['App'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['App']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_app_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEC2Instance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_app_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"EC2",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.instanceId if data.properties.instanceId else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['App']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_app_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_app_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['component'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['component']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_component"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEC2Instance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_component.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"EC2",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.instanceId if data.properties.instanceId else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['component']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_component",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_component"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['Component'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Component']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_component_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEC2Instance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_component_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"EC2",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.instanceId if data.properties.instanceId else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Component']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_component_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_component_capitalized"
         }
      ],
      "outputs":{

      },
      "tags":[
         {
            "key":"default",
            "value":"true"
         },
         {
            "key":"owner",
            "value":"rely"
         }
      ]
   },
   {
      "id":"rely.aws.v1.s3-bucket-to-cloud-resource-link-to-environment",
      "title":"AWS S3 Bucket to Cloud Resource (w/ link to an environment)",
      "description":"This automation creates a cloud resource from an AWS S3 bucket and links it to an environment based on tag matching",
      "icon":null,
      "isActive":true,
      "needsApproval":false,
      "order":0,
      "type":"automation",
      "arguments":{
         "sourceBlueprintId":"aws.v1.s3_bucket",
         "targetBlueprintId":"cloud_resource"
      },
      "secrets":{

      },
      "triggers":[
         {
            "type":"onEvent",
            "conditions":[
               {
                  "field":"data.blueprintId",
                  "expression":false,
                  "operator":"eq",
                  "value":"{{ arguments.sourceBlueprintId }}"
               }
            ],
            "event":{
               "resource":"entity",
               "action":[
                  "create",
                  "update"
               ]
            }
         }
      ],
      "actions":[
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"cloud_provider_account",
                     "operator":"eq"
                  },
                  {
                     "field":"sources",
                     "value":"aws.v1.organizations_account.{{ data.relations.account.value }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":true
            },
            "id":"fetch_cloud_provider_account"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['env'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['env']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_env"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSS3Bucket":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_env.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"S3",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['env']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_env",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_env"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['Env'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Env']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_env_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSS3Bucket":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_env_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"S3",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Env']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_env_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_env_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['ENV'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['ENV']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_env_all_caps"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSS3Bucket":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_env_all_caps.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"S3",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['ENV']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_env_all_caps",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_env_all_caps"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['environment'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['environment']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_environment"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSS3Bucket":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_environment.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"S3",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['environment']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_environment",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_environment"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['Environment'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Environment']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_environment_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSS3Bucket":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_environment_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"S3",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Environment']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_environment_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_environment_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['ENVIRONMENT'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['ENVIRONMENT']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_environment_all_caps"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSS3Bucket":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_environment_all_caps.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"S3",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['ENVIRONMENT']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_environment_all_caps",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_environment_full_caps"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['stage'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['stage']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_stage"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSS3Bucket":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_stage.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"S3",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['stage']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_stage",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_stage"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['Stage'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Stage']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_stage_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSS3Bucket":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_stage_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"S3",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Stage']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_stage_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_stage_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['STAGE'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['STAGE']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_stage_all_caps"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSS3Bucket":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_stage_all_caps.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"S3",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['STAGE']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_stage_all_caps",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_stage_full_caps"
         }
      ],
      "outputs":{

      },
      "tags":[
         {
            "key":"default",
            "value":"true"
         },
         {
            "key":"owner",
            "value":"rely"
         }
      ]
   },
   {
      "id":"rely.aws.v1.s3-bucket-to-cloud-resource-link-to-service",
      "title":"AWS S3 Bucket to Cloud Resource (w/ link to a service)",
      "description":"This automation creates a Cloud Resource from an AWS S3 bucket and links it to a service based on tag matching",
      "icon":null,
      "isActive":true,
      "needsApproval":false,
      "order":0,
      "type":"automation",
      "arguments":{
         "sourceBlueprintId":"aws.v1.s3_bucket",
         "targetBlueprintId":"cloud_resource"
      },
      "secrets":{

      },
      "triggers":[
         {
            "type":"onEvent",
            "conditions":[
               {
                  "field":"data.blueprintId",
                  "expression":false,
                  "operator":"eq",
                  "value":"{{ arguments.sourceBlueprintId }}"
               }
            ],
            "event":{
               "resource":"entity",
               "action":[
                  "create",
                  "update"
               ]
            }
         }
      ],
      "actions":[
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"cloud_provider_account",
                     "operator":"eq"
                  },
                  {
                     "field":"sources",
                     "value":"aws.v1.organizations_account.{{ data.relations.account.value }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":true
            },
            "id":"fetch_cloud_provider_account"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['service'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['service']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_service"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSS3Bucket":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_service.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"S3",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['service']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_service",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_service"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['Service'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Service']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_service_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSS3Bucket":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_service_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"S3",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Service']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_service_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_service_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['application'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['application']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_application"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSS3Bucket":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_application.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"S3",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['application']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_application",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_application"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['Application'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Application']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_application_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSS3Bucket":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_application_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"S3",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Application']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_application_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_application_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['app'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['app']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_app"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSS3Bucket":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_app.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"S3",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['app']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_app",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_app"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['App'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['App']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_app_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSS3Bucket":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_app_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"S3",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['App']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_app_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_app_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['component'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['component']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_component"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSS3Bucket":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_component.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"S3",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['component']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_component",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_component"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['Component'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Component']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_component_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSS3Bucket":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_component_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"S3",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Component']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_component_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_component_capitalized"
         }
      ],
      "outputs":{

      },
      "tags":[
         {
            "key":"default",
            "value":"true"
         },
         {
            "key":"owner",
            "value":"rely"
         }
      ]
   },
   {
      "id":"rely.aws.v1.rds-instance-to-resource-link-to-environment",
      "title":"AWS RDS Instance to Resource (w/ link to an environment)",
      "description":"This automation creates a cloud resource from an AWS RDS instance and links it to an environment based on tag matching",
      "isActive":true,
      "order":0,
      "type":"automation",
      "arguments":{
         "sourceBlueprintId":"aws.v1.rds_db_instance",
         "targetBlueprintId":"cloud_resource"
      },
      "secrets":{

      },
      "triggers":[
         {
            "type":"onEvent",
            "conditions":[
               {
                  "field":"data.blueprintId",
                  "operator":"eq",
                  "value":"{{ arguments.sourceBlueprintId }}"
               }
            ],
            "event":{
               "resource":"entity",
               "action":[
                  "create",
                  "update"
               ]
            }
         }
      ],
      "actions":[
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"cloud_provider_account",
                     "operator":"eq"
                  },
                  {
                     "field":"sources",
                     "value":"aws.v1.organizations_account.{{ data.relations.account.value }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":true
            },
            "id":"fetch_cloud_provider_account"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['env'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['env']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_env"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSRDSInstance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_env.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"RDS",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['env']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_env",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_env"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['Env'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Env']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_env_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSRDSInstance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_env_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"RDS",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Env']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_env_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_env_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['ENV'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['ENV']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_env_all_caps"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSRDSInstance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_env_all_caps.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"RDS",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['ENV']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_env_all_caps",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_env_all_caps"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['environment'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['environment']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_environment"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSRDSInstance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_environment.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"RDS",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['environment']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_environment",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_environment"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['Environment'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Environment']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_environment_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSRDSInstance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_environment_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"RDS",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Environment']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_environment_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_environment_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['ENVIRONMENT'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['ENVIRONMENT']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_environment_all_caps"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSRDSInstance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_environment_all_caps.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"RDS",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['ENVIRONMENT']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_environment_all_caps",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_environment_full_caps"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['stage'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['stage']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_stage"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSRDSInstance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_stage.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"RDS",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['stage']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_stage",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_stage"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['Stage'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Stage']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_stage_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSRDSInstance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_stage_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"RDS",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Stage']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_stage_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_stage_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['STAGE'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['STAGE']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_stage_all_caps"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSRDSInstance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_stage_all_caps.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"RDS",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['STAGE']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_stage_all_caps",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_stage_full_caps"
         }
      ],
      "tags":[
         {
            "key":"default",
            "value":"true"
         },
         {
            "key":"owner",
            "value":"rely"
         }
      ]
   },
   {
      "id":"rely.aws.v1.rds-instance-to-cloud-resource-link-to-service",
      "title":"AWS RDS Instance to Cloud Resource (w/ link to a service)",
      "description":"This automation creates a Cloud Resource from an AWS RDS instance and links it to a service based on tag matching",
      "icon":null,
      "isActive":true,
      "needsApproval":false,
      "order":0,
      "type":"automation",
      "arguments":{
         "sourceBlueprintId":"aws.v1.rds_db_instance",
         "targetBlueprintId":"cloud_resource"
      },
      "secrets":{

      },
      "triggers":[
         {
            "type":"onEvent",
            "conditions":[
               {
                  "field":"data.blueprintId",
                  "expression":false,
                  "operator":"eq",
                  "value":"{{ arguments.sourceBlueprintId }}"
               }
            ],
            "event":{
               "resource":"entity",
               "action":[
                  "create",
                  "update"
               ]
            }
         }
      ],
      "actions":[
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"cloud_provider_account",
                     "operator":"eq"
                  },
                  {
                     "field":"sources",
                     "value":"aws.v1.organizations_account.{{ data.relations.account.value }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":true
            },
            "id":"fetch_cloud_provider_account"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['service'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['service']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_service"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSRDSInstance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_service.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"RDS",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['service']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_service",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_service"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['Service'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Service']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_service_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSRDSInstance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_service_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"RDS",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Service']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_service_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_service_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['application'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['application']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_application"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSRDSInstance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_application.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"RDS",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['application']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_application",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_application"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['Application'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Application']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_application_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSRDSInstance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_application_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"RDS",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Application']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_application_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_application_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['app'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['app']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_app"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSRDSInstance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_app.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"RDS",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['app']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_app",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_app"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['App'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['App']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_app_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSRDSInstance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_app_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"RDS",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['App']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_app_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_app_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['component'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['component']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_component"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSRDSInstance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_component.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"RDS",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['component']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_component",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_component"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['Component'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Component']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_component_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSRDSInstance":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_component_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"RDS",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Component']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_component_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_component_capitalized"
         }
      ],
      "outputs":{

      },
      "tags":[
         {
            "key":"default",
            "value":"true"
         },
         {
            "key":"owner",
            "value":"rely"
         }
      ]
   },
   {
      "id":"rely.aws.v1.eks-cluster-to-resource-link-to-environment",
      "title":"AWS EKS Cluster to Resource (w/ link to an environment)",
      "description":"This automation creates a cloud resource from an AWS EKS Cluster and links it to an environment based on tag matching",
      "isActive":true,
      "order":0,
      "type":"automation",
      "arguments":{
         "sourceBlueprintId":"aws.v1.eks_cluster",
         "targetBlueprintId":"cloud_resource"
      },
      "secrets":{

      },
      "triggers":[
         {
            "type":"onEvent",
            "conditions":[
               {
                  "field":"data.blueprintId",
                  "operator":"eq",
                  "value":"{{ arguments.sourceBlueprintId }}"
               }
            ],
            "event":{
               "resource":"entity",
               "action":[
                  "create",
                  "update"
               ]
            }
         }
      ],
      "actions":[
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"cloud_provider_account",
                     "operator":"eq"
                  },
                  {
                     "field":"sources",
                     "value":"aws.v1.organizations_account.{{ data.relations.account.value }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":true
            },
            "id":"fetch_cloud_provider_account"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['env'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['env']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_env"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEKSCluster":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_env.output.id }}"
                     }
                  },
                  "properties":{
               "cloud":"AWS",
               "resourceType":"EKS",
               "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
               "region":"{{ data.relations.region.value if data.relations.region else none }}",
               "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
               "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
               "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['env']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_env",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_env"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['Env'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Env']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_env_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEKSCluster":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_env_capitalized.output.id }}"
                     }
                  },
                  "properties":{
               "cloud":"AWS",
               "resourceType":"EKS",
               "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
               "region":"{{ data.relations.region.value if data.relations.region else none }}",
               "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
               "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
               "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Env']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_env_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_env_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['ENV'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['ENV']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_env_all_caps"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEKSCluster":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_env_all_caps.output.id }}"
                     }
                  },
                  "properties":{
               "cloud":"AWS",
               "resourceType":"EKS",
               "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
               "region":"{{ data.relations.region.value if data.relations.region else none }}",
               "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
               "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
               "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['ENV']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_env_all_caps",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_env_all_caps"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['environment'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['environment']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_environment"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEKSCluster":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_environment.output.id }}"
                     }
                  },
                  "properties":{
               "cloud":"AWS",
               "resourceType":"EKS",
               "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
               "region":"{{ data.relations.region.value if data.relations.region else none }}",
               "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
               "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
               "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['environment']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_environment",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_environment"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['Environment'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Environment']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_environment_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEKSCluster":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_environment_capitalized.output.id }}"
                     }
                  },
                  "properties":{
               "cloud":"AWS",
               "resourceType":"EKS",
               "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
               "region":"{{ data.relations.region.value if data.relations.region else none }}",
               "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
               "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
               "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Environment']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_environment_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_environment_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['ENVIRONMENT'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['ENVIRONMENT']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_environment_all_caps"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEKSCluster":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_environment_all_caps.output.id }}"
                     }
                  },
                  "properties":{
               "cloud":"AWS",
               "resourceType":"EKS",
               "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
               "region":"{{ data.relations.region.value if data.relations.region else none }}",
               "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
               "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
               "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['ENVIRONMENT']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_environment_all_caps",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_environment_full_caps"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['stage'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['stage']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_stage"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEKSCluster":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_stage.output.id }}"
                     }
                  },
                  "properties":{
               "cloud":"AWS",
               "resourceType":"EKS",
               "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
               "region":"{{ data.relations.region.value if data.relations.region else none }}",
               "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
               "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
               "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['stage']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_stage",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_stage"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['Stage'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Stage']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_stage_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEKSCluster":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_stage_capitalized.output.id }}"
                     }
                  },
                  "properties":{
               "cloud":"AWS",
               "resourceType":"EKS",
               "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
               "region":"{{ data.relations.region.value if data.relations.region else none }}",
               "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
               "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
               "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Stage']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_stage_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_stage_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"environment",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels",
                     "value":"{{ data.properties.tags['STAGE'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['STAGE']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_environment_using_tag_stage_all_caps"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEKSCluster":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "environment":{
                        "value":"{{ actions.fetch_environment_using_tag_stage_all_caps.output.id }}"
                     }
                  },
                  "properties":{
               "cloud":"AWS",
               "resourceType":"EKS",
               "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
               "region":"{{ data.relations.region.value if data.relations.region else none }}",
               "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
               "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
               "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['STAGE']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_environment_using_tag_stage_all_caps",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_stage_full_caps"
         }
      ],
      "tags":[
         {
            "key":"default",
            "value":"true"
         },
         {
            "key":"owner",
            "value":"rely"
         }
      ]
   },
   {
      "id":"rely.aws.v1.eks-cluster-to-cloud-resource-link-to-service",
      "title":"AWS EKS Cluster to Cloud Resource (w/ link to a service)",
      "description":"This automation creates a Cloud Resource from an AWS EKS Cluster and links it to a service based on tag matching",
      "icon":null,
      "isActive":true,
      "needsApproval":false,
      "order":0,
      "type":"automation",
      "arguments":{
         "sourceBlueprintId":"aws.v1.eks_cluster",
         "targetBlueprintId":"cloud_resource"
      },
      "secrets":{

      },
      "triggers":[
         {
            "type":"onEvent",
            "conditions":[
               {
                  "field":"data.blueprintId",
                  "expression":false,
                  "operator":"eq",
                  "value":"{{ arguments.sourceBlueprintId }}"
               }
            ],
            "event":{
               "resource":"entity",
               "action":[
                  "create",
                  "update"
               ]
            }
         }
      ],
      "actions":[
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"cloud_provider_account",
                     "operator":"eq"
                  },
                  {
                     "field":"sources",
                     "value":"aws.v1.organizations_account.{{ data.relations.account.value }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":true
            },
            "id":"fetch_cloud_provider_account"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['service'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['service']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_service"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEKSCluster":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_service.output.id }}"
                     }
                  },
                  "properties":{
               "cloud":"AWS",
               "resourceType":"EKS",
               "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
               "region":"{{ data.relations.region.value if data.relations.region else none }}",
               "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
               "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
               "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['service']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_service",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_service"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['Service'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Service']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_service_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEKSCluster":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_service_capitalized.output.id }}"
                     }
                  },
                  "properties":{
               "cloud":"AWS",
               "resourceType":"EKS",
               "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
               "region":"{{ data.relations.region.value if data.relations.region else none }}",
               "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
               "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
               "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Service']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_service_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_service_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['application'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['application']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_application"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEKSCluster":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_application.output.id }}"
                     }
                  },
                  "properties":{
               "cloud":"AWS",
               "resourceType":"EKS",
               "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
               "region":"{{ data.relations.region.value if data.relations.region else none }}",
               "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
               "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
               "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['application']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_application",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_application"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['Application'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Application']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_application_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEKSCluster":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_application_capitalized.output.id }}"
                     }
                  },
                  "properties":{
               "cloud":"AWS",
               "resourceType":"EKS",
               "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
               "region":"{{ data.relations.region.value if data.relations.region else none }}",
               "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
               "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
               "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Application']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_application_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_application_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['app'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['app']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_app"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEKSCluster":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_app.output.id }}"
                     }
                  },
                  "properties":{
               "cloud":"AWS",
               "resourceType":"EKS",
               "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
               "region":"{{ data.relations.region.value if data.relations.region else none }}",
               "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
               "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
               "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['app']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_app",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_app"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['App'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['App']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_app_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEKSCluster":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_app_capitalized.output.id }}"
                     }
                  },
                  "properties":{
               "cloud":"AWS",
               "resourceType":"EKS",
               "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
               "region":"{{ data.relations.region.value if data.relations.region else none }}",
               "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
               "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
               "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['App']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_app_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_app_capitalized"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['component'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['component']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_component"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEKSCluster":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_component.output.id }}"
                     }
                  },
                  "properties":{
               "cloud":"AWS",
               "resourceType":"EKS",
               "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
               "region":"{{ data.relations.region.value if data.relations.region else none }}",
               "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
               "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
               "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['component']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_component",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_component"
         },
         {
            "type":"fetchResource",
            "args":{
               "conditions":[
                  {
                     "field":"blueprintId",
                     "value":"service",
                     "operator":"eq"
                  },
                  {
                     "field":"properties/labels/aws",
                     "value":"{{ data.properties.tags['Component'] }}",
                     "operator":"contains"
                  }
               ],
               "resourceType":"entity",
               "stopFlowIfNotFound":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Component']",
                  "value":null,
                  "operator":"neq"
               }
            ],
            "id":"fetch_service_using_tag_component_capitalized"
         },
         {
            "type":"upsertResource",
            "args":{
               "data":{
                  "id":"{{ data.id }}.{{ arguments.targetBlueprintId }}",
                  "title":"{{ data.title }}",
                  "description":"{{ data.description }}",
                  "blueprintId":"{{ arguments.targetBlueprintId }}",
                  "relations":{
                     "AWSEKSCluster":{
                        "value":"{{ data.id }}"
                     },
                     "cloud_provider_account":{
                        "value":"{{ actions.fetch_cloud_provider_account.output.id }}"
                     },
                     "service":{
                        "value":"{{ actions.fetch_service_using_tag_component_capitalized.output.id }}"
                     }
                  },
                  "properties":{
                     "cloud":"AWS",
                     "resourceType":"EKS",
                     "tags":"{{ (data.properties.tags | tojson) if data.properties.tags else none }}",
                     "region":"{{ data.relations.region.value if data.relations.region else none }}",
                     "link":"{{ data.properties.managementPageUrl if data.properties.managementPageUrl else none }}",
                     "observabilityLink":"{{ data.properties.dashboardPageUrl if data.properties.dashboardPageUrl else none }}",
                     "resourceId":"{{ data.properties.arn if data.properties.arn else none }}"
                  }
               },
               "resourceType":"entity",
               "createSuggestion":false
            },
            "conditions":[
               {
                  "field":"data.properties.tags",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"data.properties.tags['Component']",
                  "value":null,
                  "operator":"neq"
               },
               {
                  "field":"actions",
                  "value":"fetch_service_using_tag_component_capitalized",
                  "operator":"contains"
               }
            ],
            "id":"upsert_resource_using_tag_component_capitalized"
         }
      ],
      "outputs":{

      },
      "tags":[
         {
            "key":"default",
            "value":"true"
         },
         {
            "key":"owner",
            "value":"rely"
         }
      ]
   }
]
