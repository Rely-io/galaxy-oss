image:
  # repository -- Image to use for deploying the application
  repository: devrelyio/galaxy
  # -- Pull policy for the image
  pullPolicy: IfNotPresent
  # -- Tag to use for deploying the application
  tag: ""

# schedule -- Configure the Schedule for the cronjob
# -- This is a cron expression that defines the schedule for the cronjob
schedule: "*/59 * * * *" # Every 59 minutes

# -- External secrets configuration
externalSecrets:
  # -- Enable external secrets
  enabled: false
  # -- The name of the external secrets
  target: "my-vault-secrets"
  # -- All keys in secrets file will be exported as environment variables
  allAsEnv: false
  # -- environment variables to be set in the container from the external secrets if allAsEnv is false
  # envs is an array of objects with the following keys
  # name -- The name of the environment variable to setup
  # key -- The key in the secret to use
  # eg.:
  # envs:
  # - name: "RELY_API_TOKEN"
  #   key: "api_token"
  envs: []

# -- The configuration for the integration
integration:
  # -- The type of the integration
  # can be any of the following: pagerduty, github, gitlab, bitbucket, sonarqube, aws, opsgenie, gcp
  type:
  # -- The execution type of the integration
  # can be either cronjob or daemon
  executionType: cronjob
  # -- The interval in minutes at which the integration should run
  # only required if the execution type is daemon
  daemonInterval: 60
  # -- The url for the Rely API
  apiUrl: "https://magneto.rely.io/"

# -- Environment variables to be set in the container if not using external secrets
env:
  # The following environment variables are required to run this container
  # more environment variables can be added here as required for each integration
  # env.RELY_API_TOKEN -- The API token for the Rely API
  RELY_API_TOKEN:
  # env.RELY_INTEGRATION_ID -- The identifier of this integration instance
  RELY_INTEGRATION_ID:

# nameOverride -- Override the name of the chart
nameOverride: ""
# fullnameOverride -- Override the fullname of the chart
fullnameOverride: ""

serviceAccount:
  # serviceAccount.create -- Specifies whether a service account should be created
  create: false
  # serviceAccount.automount -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # serviceAccount.annotations -- Annotations to add to the service account
  annotations: {}
  # serviceAccount.name -- The name of the service account to use.
  # -- If not set and create is true, a name is generated using the fullname template
  name: ""

# podAnnotations -- The annotations to add to the pod
podAnnotations: {}
# podLabels -- The labels to instances of the pod
podLabels: {}

# podSecurityContext -- The security context for the pod
podSecurityContext: {}
  # fsGroup: 2000

# securityContext -- The security context for the container
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# resources -- The resource requests and limits for the containers
resources: {}

# volumes -- Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# volumeMounts -- Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# nodeSelector -- Node labels for pod assignment
nodeSelector: {}

# tolerations -- Toleration labels for pod assignment
tolerations: []

# affinity -- Affinity settings for pod assignment
affinity: {}
